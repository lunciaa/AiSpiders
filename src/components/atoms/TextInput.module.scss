@use "@/utils/master" as m;

$height: 30px;

@keyframes disable {
  from {
    color: inherit;
    text-align: left;
  }

  30% {
    color: transparent;
    text-align: left;
  }

  60% {
    color: transparent;
    text-align: center;
  }

  to {
    color: #a7a7a7;
    text-align: center;
  }
}

.input_container {
  position: relative;
  width: 240px;
  height: $height;
  margin: 10px auto;

  font-size: 1rem;

  border-radius: m.$border-radius;

  &::before {
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    bottom: 0;
    left: 0;
    border-radius: inherit;
    z-index: -1;

    transform: translate(-6px, -6px);
    transition: transform ease-in 0.2s, height ease-in 0.2s;

    background-color: m.$colors_accent;
    opacity: 0.9;
  }

  &.disabled::before {
    height: 5px;
    transform: translateY(100%);
  }

  &.error::before {
    background-color: rgba(m.$colors_error, 0.8);
  }

  &.focused::before {
    transform: translate(6px, 6px);
  }

  & > input {
    position: absolute;
    top: 0;
    left: 0;
    z-index: 1;

    width: 100%;
    height: 100%;

    background-color: rgba(20, 20, 20, 0.8);
    backdrop-filter: blur(5px);
    padding: 0 10px;

    border-radius: inherit;
    font-size: inherit;

    outline: none;
    border: none;

    &.has_eye {
      padding-right: calc(10px + $height);
    }

    &:disabled {
      animation: disable ease-in-out 1s forwards;
    }
  }

  & .eye {
    position: absolute;
    z-index: 2;
    right: 0;
    top: 0;

    height: $height;
    width: $height;
    display: flex;
    justify-content: center;
    align-items: center;

    $border-padding: 5px;

    color: rgba(m.$colors_font, 0.7);

    cursor: pointer;

    &::before {
      position: absolute;
      left: -2px;
      top: $border-padding;
      height: $height - $border-padding * 2;
      width: 2px;

      content: "";

      background-color: rgba(m.$colors_font, 0.3);
    }
  }
}
